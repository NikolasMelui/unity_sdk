//
//  VoxImplantDelegate.h
//
//  Copyright (c) 2011-2015, Zingaya, Inc. All rights reserved.
//

#import <Foundation/Foundation.h>

struct VoxImplantNetworkInfo
{
    unsigned long packetLoss;
};

/**
 @warning Deprecated. Use <VICallDelegate>, <VIClientSessionDelegate> and <VIClientCallManagerDelegate>. Please see details in each particular method.
 */
@protocol VoxImplantDelegate <NSObject>

///---------------------------
/// @name Connection Events
///---------------------------

/**
 Connection with VoxImplant cloud established
 @warning Deprecated. Use <[VIClientSessionDelegate clientSessionDidConnect:]> instead.
 */
@optional
- (void) onConnectionSuccessful;

/**
 Connection with cloud closed
 @warning Deprecated. Use <[VIClientSessionDelegate clientSessionDidDisconnect:]> instead.
 */
@optional
- (void) onConnectionClosed;

/**
 Connection with cloud failed
 
 @param reason Error message
 @warning      Deprecated. Use <[VIClientSessionDelegate client:sessionDidFailConnectWithError:]> instead.
 */
@optional
- (void) onConnectionFailedWithError: (NSString *) reason;

///---------------------------
/// @name Login Events
///---------------------------

/**
 Triggered if login attempt was successful
 
 @param displayName Full name of logged in user
 @param authParams  Auth params
 
     //Example auth params:
     {"accessExpire" : seconds_to_expire ,
     "accessToken" : "accessToken_abcdef..." ,
     "refreshExpire" : refresh_to_expire ,
     "refreshToken" : "refreshToken_abcdef..." }
 
 @warning Deprecated. Use completion handler in login API used to login to VoxImplant: <[VIClient loginWithUser:password:success:failure:]> or <[VIClient loginWithUser:token:success:failure:]> or <[VIClient loginWithUser:oneTimeKey:success:failure:]>.
 */
@optional
- (void) onLoginSuccessfulWithDisplayName: (NSString *) displayName andAuthParams:(NSDictionary*)authParams;

/**
 Triggered if login attempt failed
 
 @param errorCode Numeric error code
 @warning         Deprecated. Use completion handler in login API used to login to VoxImplant: <[VIClient loginWithUser:password:success:failure:]> or <[VIClient loginWithUser:token:success:failure:]> or <[VIClient loginWithUser:oneTimeKey:success:failure:]>
 */
@optional
- (void) onLoginFailedWithErrorCode: (NSNumber *) errorCode;

/**
 Returns one time key generated by the login server as a result of requestOneTimeLoginKey.
 
 @param key One time key
 @warning   Deprecated. Use completion handler in <[VIClient requestOneTimeKeyWithUser:result:]> instead.
 */
@optional
- (void) onOneTimeKeyGenerated: (NSString *) key;

/**
 Triggered when refresh of login tokens failed
 
 @param errorCode Error code
 @warning         Deprecated. Use completion handler in <[VIClient requestOneTimeKeyWithUser:result:]> instead.
 */
@optional
- (void) onRefreshTokenFailed: (NSNumber*) errorCode;

/**
 Triggered when refresh of login tokens finished successfully
 
 @param authParams Auth params
 @warning          Deprecated. Use completion handler in <[VIClient requestOneTimeKeyWithUser:result:]> instead.
 */
@optional
- (void) onRefreshTokenSuccess: (NSDictionary*) authParams;

///---------------------------
/// @name Incoming Call Event
///---------------------------

/**
 Incoming call arrives
 
 @param callId      Id of call
 @param from        SIP URI of caller
 @param displayName Displayed name of caller
 @param videoCall   Incoming video call flag
 @param headers     Optional headers passed with event
 @warning           Deprecated. Use <[VIClientCallManagerDelegate client:didReceiveIncomingCall:withIncomingVideo:headers:]> instead.
 */
@optional
- (void) onIncomingCall: (NSString *) callId caller: (NSString *) from named: (NSString *) displayName withVideo: (bool) videoCall withHeaders: (NSDictionary *) headers;


///---------------------------
/// @name Call Events
///---------------------------

/**
 Call established
 
 @param callId  id of call
 @param headers Optional headers passed with event
 @warning       Deprecated. Use <[VICallDelegate call:didConnectWithHeaders:]> instead.
 */
@optional
- (void) onCallConnected: (NSString *) callId withHeaders: (NSDictionary *) headers;

/**
 Call terminated
 
 @param callId  id of call
 @param headers Optional headers passed with event
 @warning       Deprecated. Use <[VICallDelegate call:didDisconnectWithHeaders:answeredElsewhere:]> instead.
 */
@optional
- (void) onCallDisconnected: (NSString *) callId withHeaders: (NSDictionary *) headers;

/**
 Call ringing. You should start playing call progress tone now
 
 @param callId  id of call
 @param headers Optional headers passed with event
 @warning       Deprecated. Use <[VICallDelegate call:startRingingWithHeaders:]> instead.
 */
@optional
- (void) onCallRinging: (NSString *) callId withHeaders: (NSDictionary *) headers;

/**
 Call failed
 
 @param callId  Id of call
 @param code    Status code
 @param reason  Status message
 @param headers Optional headers passed with event
 @warning       Deprecated. Use <[VICallDelegate call:didFailWithError:headers:]> instead.
 */
@optional
- (void) onCallFailed: (NSString *) callId withCode:(int)code andReason:(NSString *)reason withHeaders: (NSDictionary *) headers;

/**
 Call audio started. You should stop playing progress tone when event is received
 
 @param callId Id of call
 @warning      Deprecated. Use <[VICallDelegate callDidStartAudio:]> instead.
 */
@optional
- (void) onCallAudioStarted: (NSString *) callId;

/**
 Info received inside a call
 
 @param callId  Id of call
 @param type    MIME type of info
 @param content Body of info message
 @param headers Optional headers passed with event
 @warning       Deprecated. Use <[VICallDelegate call:didReceiveInfo:type:headers:]> instead.
 */
@optional
- (void) onSIPInfoReceivedInCall: (NSString *)callId withType: (NSString*)type andContent: (NSString *)content withHeaders: (NSDictionary *) headers;

/**
 Instant message received inside a call

 @param callId  Id of call
 @param text    Message text
 @param headers Optional headers passed with event
 @warning       Deprecated. Use <[VICallDelegate call:didReceiveMessage:headers:]> instead.
 */
@optional
- (void) onMessageReceivedInCall: (NSString *)callId withText: (NSString *)text withHeaders: (NSDictionary *) headers;

/**
 Event dispatched when packet loss data received from VoxImplant servers

 @param callId Id of call
 @param stats  VoxImplantNetworkInfo
 @warning      Deprecated. Use <[VICallDelegate call:didReceiveStatistics:]> instead.
 */
@optional
- (void) onNetStatsReceivedInCall: (NSString *)callId withStats: (const struct VoxImplantNetworkInfo *)stats;

@optional

/**
 Triggered when new video frame is available for preprocessing.

 @param pixelBuffer Video frame pixel buffer
 @param rotation    Video rotation
 @warning Deprecated. Use <[VIVideoPreprocessDelegate preprocessVideoFrame:rotation:]> instead.
 */
- (void) onPreprocessCameraCapturedVideo:(CVPixelBufferRef)pixelBuffer rotation:(int)rotation;

@end
